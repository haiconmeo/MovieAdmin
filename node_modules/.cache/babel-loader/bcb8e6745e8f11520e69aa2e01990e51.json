{"ast":null,"code":"import axios from 'axios';\nimport { AsyncStorage } from 'react-native';\nexport const userService = {\n  login,\n  logout,\n  profile_list,\n  profile_detail\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }; // console.log(config.url+\"auth/login/\");\n\n  return fetch(\"http://127.0.0.1:8000/api/auth/loginAdmin/\", requestOptions).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n\n    storeData = async () => {\n      try {\n        await AsyncStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {// saving error\n      }\n    };\n\n    return user;\n  });\n}\n\nfunction logout() {\n  localStorage.removeItem('user');\n}\n\nfunction profile_list() {\n  return axios({\n    method: \"GET\",\n    url: \"http://127.0.0.1:8000/api/auth/profile/\"\n  }).then(listProfile => {\n    console.log(listProfile.data);\n    return listProfile.data;\n  });\n}\n\nfunction profile_detail(pk) {\n  return axios({\n    method: \"GET\",\n    url: \"http://127.0.0.1:8000/api/auth/profile_ID/\" + pk\n  }).then(Profile => {\n    // console.log(Profile.data);\n    return Profile.data;\n  });\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout(); // location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["D:/DATN/MovieAdmin/src/Service/SER_auth.js"],"names":["axios","AsyncStorage","userService","login","logout","profile_list","profile_detail","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","localStorage","setItem","storeData","e","removeItem","url","listProfile","console","log","data","pk","Profile","response","text","parse","ok","status","error","message","statusText","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA,YAHyB;AAIzBC,EAAAA;AAJyB,CAApB;;AAOP,SAASH,KAAT,CAAeI,QAAf,EAAwBC,QAAxB,EAAiC;AAC7B,QAAMC,cAAc,GAAC;AACjBC,IAAAA,MAAM,EAAC,MADU;AAEjBC,IAAAA,OAAO,EAAC;AAAE,sBAAgB;AAAlB,KAFS;AAGjBC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAUC,MAAAA;AAAV,KAAf;AAHY,GAArB,CAD6B,CAM7B;;AACA,SAAOO,KAAK,CAAC,4CAAD,EAA8CN,cAA9C,CAAL,CACNO,IADM,CACDC,cADC,EAEND,IAFM,CAEDE,IAAI,IAAE;AACRC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BP,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA5B;;AACAG,IAAAA,SAAS,GAAG,YAAY;AACpB,UAAI;AACF,cAAMpB,YAAY,CAACmB,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B,CAAN;AACD,OAFD,CAEE,OAAOI,CAAP,EAAU,CACV;AACD;AACF,KANH;;AAOA,WAAOJ,IAAP;AACH,GAZM,CAAP;AAaH;;AACD,SAASd,MAAT,GAAiB;AACbe,EAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACH;;AACD,SAASlB,YAAT,GAAuB;AAEnB,SAAOL,KAAK,CAAC;AACTU,IAAAA,MAAM,EAAE,KADC;AAETc,IAAAA,GAAG,EAAE;AAFI,GAAD,CAAL,CAINR,IAJM,CAIDS,WAAW,IAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,IAAxB;AACA,WAAOH,WAAW,CAACG,IAAnB;AACH,GAPM,CAAP;AAQH;;AACD,SAAStB,cAAT,CAAwBuB,EAAxB,EAA2B;AAEvB,SAAO7B,KAAK,CAAC;AACTU,IAAAA,MAAM,EAAE,KADC;AAETc,IAAAA,GAAG,EAAE,+CAA6CK;AAFzC,GAAD,CAAL,CAINb,IAJM,CAIDc,OAAO,IAAE;AACX;AACA,WAAOA,OAAO,CAACF,IAAf;AACH,GAPM,CAAP;AAQH;;AACD,SAASX,cAAT,CAAwBc,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBhB,IAAhB,CAAqBgB,IAAI,IAAI;AAChC,UAAMJ,IAAI,GAAGI,IAAI,IAAInB,IAAI,CAACoB,KAAL,CAAWD,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACG,EAAd,EAAkB;AACd,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACA/B,QAAAA,MAAM,GAFmB,CAGzB;AACH;;AAED,YAAMgC,KAAK,GAAIR,IAAI,IAAIA,IAAI,CAACS,OAAd,IAA0BN,QAAQ,CAACO,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOR,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["import axios from 'axios';\r\nimport { AsyncStorage } from 'react-native';\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  profile_list,\r\n  profile_detail\r\n\r\n};\r\nfunction login(username,password){\r\n    const requestOptions={\r\n        method:'POST',\r\n        headers:{ 'Content-Type': 'application/json' },\r\n        body:JSON.stringify({username,password})\r\n    };\r\n    // console.log(config.url+\"auth/login/\");\r\n    return fetch(\"http://127.0.0.1:8000/api/auth/loginAdmin/\",requestOptions)\r\n    .then(handleResponse)\r\n    .then(user=>{\r\n        localStorage.setItem('user',JSON.stringify(user))\r\n        storeData = async () => {\r\n            try {\r\n              await AsyncStorage.setItem('user', JSON.stringify(user))\r\n            } catch (e) {\r\n              // saving error\r\n            }\r\n          }\r\n        return user;\r\n    });\r\n}\r\nfunction logout(){\r\n    localStorage.removeItem('user')\r\n}\r\nfunction profile_list(){\r\n    \r\n    return axios({\r\n        method: \"GET\",\r\n        url: \"http://127.0.0.1:8000/api/auth/profile/\"\r\n    })\r\n    .then(listProfile=>{\r\n        console.log(listProfile.data);\r\n        return listProfile.data;\r\n    });\r\n}\r\nfunction profile_detail(pk){\r\n    \r\n    return axios({\r\n        method: \"GET\",\r\n        url: \"http://127.0.0.1:8000/api/auth/profile_ID/\"+pk\r\n    })\r\n    .then(Profile=>{\r\n        // console.log(Profile.data);\r\n        return Profile.data;\r\n    });\r\n}\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                // location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}