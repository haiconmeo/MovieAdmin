{"ast":null,"code":"import { userConstants } from '../constants';\nimport { userService } from '../Service';\nimport { history } from '../helpers';\nexport const userAction = {\n  login,\n  logout,\n  listprofile,\n  profiledetail\n};\n\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n      history.push(\"/admin/dashboard\");\n      window.location.reload();\n    }, error => {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  history.push(\"/auth/login\");\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction listprofile() {\n  return dispatch => {\n    dispatch(request());\n    userService.profile_list().then(list => {\n      dispatch(success(list));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.PROFILE_REQUEST\n    };\n  }\n\n  function success(list) {\n    return {\n      type: userConstants.PROFILE_SUCCESS,\n      list\n    };\n  }\n}\n\nfunction profiledetail(pk) {\n  return dispatch => {\n    dispatch(request());\n    userService.profile_detail(pk).then(profile => {\n      dispatch(success(profile));\n      console.log(profile);\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.PROFILE_ID_REQUEST\n    };\n  }\n\n  function success(profile) {\n    return {\n      type: userConstants.PROFILE_ID_SUCCESS,\n      profile\n    };\n  }\n}","map":{"version":3,"sources":["D:/DATN/MovieAdmin/src/action/auth.js"],"names":["userConstants","userService","history","userAction","login","logout","listprofile","profiledetail","username","password","dispatch","request","then","user","success","push","window","location","reload","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","profile_list","list","PROFILE_REQUEST","PROFILE_SUCCESS","pk","profile_detail","profile","console","log","PROFILE_ID_REQUEST","PROFILE_ID_SUCCESS"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,MAAMC,UAAU,GAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,MAFoB;AAGpBC,EAAAA,WAHoB;AAIpBC,EAAAA;AAJoB,CAAjB;;AAMP,SAASH,KAAT,CAAeI,QAAf,EAAwBC,QAAxB,EAAiC;AAC7B,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAACH,MAAAA;AAAD,KAAD,CAAR,CAAR;AACAP,IAAAA,WAAW,CAACG,KAAZ,CAAkBI,QAAlB,EAA2BC,QAA3B,EACCG,IADD,CAEIC,IAAI,IAAE;AACFH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAX,MAAAA,OAAO,CAACa,IAAR,CAAa,kBAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KANL,EAOIC,KAAK,IAAI;AACLT,MAAAA,QAAQ,CAACU,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AAEH,KAVL;AAYH,GAdD;;AAeA,WAASV,OAAT,CAAiBE,IAAjB,EAAuB;AAAC,WAAO;AAACS,MAAAA,IAAI,EAACtB,aAAa,CAACuB,aAApB;AAAkCV,MAAAA;AAAlC,KAAP;AAA+C;;AACvE,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAC,WAAO;AAACS,MAAAA,IAAI,EAACtB,aAAa,CAACwB,aAApB;AAAkCX,MAAAA;AAAlC,KAAP;AAA+C;;AACvE,WAASO,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEtB,aAAa,CAACyB,aAAtB;AAAqCN,MAAAA;AAArC,KAAP;AAAqD;AAClF;;AACD,SAASd,MAAT,GAAkB;AACdJ,EAAAA,WAAW,CAACI,MAAZ;AACAH,EAAAA,OAAO,CAACa,IAAR,CAAa,aAAb;AACA,SAAO;AAAEO,IAAAA,IAAI,EAAEtB,aAAa,CAAC0B;AAAtB,GAAP;AACH;;AACD,SAASpB,WAAT,GAAsB;AAClB,SAAOI,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AACAV,IAAAA,WAAW,CAAC0B,YAAZ,GAECf,IAFD,CAEMgB,IAAI,IAAE;AACRlB,MAAAA,QAAQ,CAACI,OAAO,CAACc,IAAD,CAAR,CAAR;AACH,KAJD;AAMH,GARD;;AASA,WAASjB,OAAT,GAAkB;AAAC,WAAO;AAACW,MAAAA,IAAI,EAACtB,aAAa,CAAC6B;AAApB,KAAP;AAA4C;;AAC/D,WAASf,OAAT,CAAiBc,IAAjB,EAAuB;AAAC,WAAO;AAACN,MAAAA,IAAI,EAACtB,aAAa,CAAC8B,eAApB;AAAoCF,MAAAA;AAApC,KAAP;AAAiD;AAE5E;;AACD,SAASrB,aAAT,CAAuBwB,EAAvB,EAA0B;AACtB,SAAOrB,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AACAV,IAAAA,WAAW,CAAC+B,cAAZ,CAA2BD,EAA3B,EAECnB,IAFD,CAEMqB,OAAO,IAAE;AACXvB,MAAAA,QAAQ,CAACI,OAAO,CAACmB,OAAD,CAAR,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,KALD;AAOH,GATD;;AAUA,WAAStB,OAAT,GAAkB;AAAC,WAAO;AAACW,MAAAA,IAAI,EAACtB,aAAa,CAACoC;AAApB,KAAP;AAA+C;;AAClE,WAAStB,OAAT,CAAiBmB,OAAjB,EAA0B;AAAC,WAAO;AAACX,MAAAA,IAAI,EAACtB,aAAa,CAACqC,kBAApB;AAAuCJ,MAAAA;AAAvC,KAAP;AAAuD;AAErF","sourcesContent":["import {userConstants} from '../constants'\r\nimport {userService} from '../Service'\r\nimport {history} from '../helpers'\r\nexport const userAction={\r\n    login,\r\n    logout,\r\n    listprofile,\r\n    profiledetail,\r\n};\r\nfunction login(username,password){\r\n    return dispatch=>{\r\n        dispatch(request({username}));\r\n        userService.login(username,password)\r\n        .then(\r\n            user=>{\r\n                dispatch(success(user));\r\n                history.push(\"/admin/dashboard\") ;\r\n                window.location.reload();\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                \r\n            }\r\n        );\r\n    };\r\n    function request(user) {return {type:userConstants.LOGIN_REQUEST,user}}\r\n    function success(user) {return {type:userConstants.LOGIN_SUCCESS,user}}\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\nfunction logout() {\r\n    userService.logout();\r\n    history.push(\"/auth/login\")\r\n    return { type: userConstants.LOGOUT };\r\n}\r\nfunction listprofile(){\r\n    return dispatch=>{\r\n        dispatch(request());\r\n        userService.profile_list()\r\n\r\n        .then(list=>{\r\n            dispatch(success(list));\r\n        })\r\n\r\n    }\r\n    function request(){return {type:userConstants.PROFILE_REQUEST}}\r\n    function success(list) {return {type:userConstants.PROFILE_SUCCESS,list}}\r\n    \r\n}\r\nfunction profiledetail(pk){\r\n    return dispatch=>{\r\n        dispatch(request());\r\n        userService.profile_detail(pk)\r\n\r\n        .then(profile=>{\r\n            dispatch(success(profile));\r\n            console.log(profile)\r\n        })\r\n\r\n    }\r\n    function request(){return {type:userConstants.PROFILE_ID_REQUEST}}\r\n    function success(profile) {return {type:userConstants.PROFILE_ID_SUCCESS,profile}}\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}